{"version":3,"file":"static/js/634.fa74edef.chunk.js","mappings":"oPAEaA,EAAYC,EAAAA,EAAAA,IAAH,gHAOTC,EAAaD,EAAAA,EAAAA,KAAH,sCAIVE,EAAcF,EAAAA,EAAAA,MAAH,gEAKXG,EAAaH,EAAAA,EAAAA,GAAH,iF,kBCyCvB,EAhDe,WAEb,OAAwCI,EAAAA,EAAAA,MAAxC,eAAqBC,GAArB,WACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAcF,EAASG,OAAOC,QAAQ,WAAY,IAExD,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACJR,IACFS,EAAAA,EAAAA,IAAeT,GAAaU,MAAK,SAAAC,GAAQ,OAAIJ,EAAaI,EAAjB,GAE5C,GAAE,CAACX,IAeJ,OACE,UAACT,EAAD,YACE,UAACE,EAAD,CAAYmB,SAXS,SAAAC,GACvBA,EAAMC,iBACoB,KAAtBV,EAAWW,OAIflB,EAAgB,CAAEmB,MAAOZ,IAHvBa,MAAM,yCAIT,EAIG,WACE,SAACvB,EAAD,CAAawB,SAhBO,SAAAL,GACxBR,EAAcQ,EAAMM,cAAcC,MACnC,EAc+CC,KAAK,UAC/C,mBAAQA,KAAK,SAAb,wBAGF,SAAC1B,EAAD,UACGW,EAAUgB,KAAI,SAAAC,GAAI,OACjB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAM3B,GAAY4B,GAAE,kBAAaH,EAAKI,IAArD,SACGJ,EAAKK,kBAFDL,EAAKI,GADG,QAU1B,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 50px;\n  margin-left: 50px;\n`;\n\nexport const FormStyled = styled.form`\n  height: 0;\n`;\n\nexport const InputStyled = styled.input`\n  width: 400px;\n  margin-right: 20px;\n`;\n\nexport const ListSearch = styled.ul`\n  list-style: none;\n  margin-top: 50px;\n  padding: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  Container,\n  FormStyled,\n  InputStyled,\n  ListSearch,\n} from './Movies.styled';\nimport { getSearchMovie } from '../../api/api';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  // eslint-disable-next-line\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const queryString = location.search.replace(/\\?query=/, '');\n\n  const [searchWord, setSearchWord] = useState('');\n  const [listFilms, setListFilms] = useState([]);\n\n  useEffect(() => {\n    if (queryString) {\n      getSearchMovie(queryString).then(response => setListFilms(response));\n    }\n  }, [queryString]);\n\n  const handleInputChange = event => {\n    setSearchWord(event.currentTarget.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (searchWord.trim() === '') {\n      alert('Please enter what do you want to find.');\n      return;\n    }\n    setSearchParams({ query: searchWord });\n  };\n\n  return (\n    <Container>\n      <FormStyled onSubmit={handleFormSubmit}>\n        <InputStyled onChange={handleInputChange} type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </FormStyled>\n\n      <ListSearch>\n        {listFilms.map(film => (\n          <li key={film.id}>\n            <Link state={{ from: location }} to={`/movies/${film.id}`}>\n              {film.original_title}\n            </Link>\n          </li>\n        ))}\n      </ListSearch>\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","FormStyled","InputStyled","ListSearch","useSearchParams","setSearchParams","location","useLocation","queryString","search","replace","useState","searchWord","setSearchWord","listFilms","setListFilms","useEffect","getSearchMovie","then","response","onSubmit","event","preventDefault","trim","query","alert","onChange","currentTarget","value","type","map","film","state","from","to","id","original_title"],"sourceRoot":""}